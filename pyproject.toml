[project]
requires-python = ">=3.7"

[build-system]
requires = [
  "setuptools >= 50",
  "wheel >= 0.35",
  "setuptools_scm[toml] >= 4.1",
  "setuptools_scm_git_archive",
  "pybind11 >= 2.7.1, <= 2.9.0"
]
build-backend = "setuptools.build_meta"

[tool.black]
line-length = 88
target-version = ["py37", "py38"]
skip-string-normalization = true
include = '\.pyi?$'
exclude = '''
/(
    \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | _build
  | buck-out
  | build
  | dist
  | docs
  | misc
  | \.egg-info
)/
'''

[tool.cibuildwheel]
test-command = "pytest -nauto {project}/tests"
test-extras = "test"
skip = "cp36-*"
test-skip = "*_arm64 *_universal2:arm64"

[tool.cibuildwheel.environment]
QPDF_MIN_VERSION = "10.3.1"
QPDF_VERSION = "10.3.2"
QPDF_PATTERN = "https://github.com/qpdf/qpdf/releases/download/release-qpdf-VERSION/qpdf-VERSION.tar.gz"
JPEG_RELEASE = "https://www.ijg.org/files/jpegsrc.v9d.tar.gz"
ZLIB_RELEASE = "https://www.zlib.net/zlib-1.2.11.tar.gz"

[tool.cibuildwheel.linux]
before-all = [
  "yum install -y wget libxml2-devel libxslt-devel",
  "bash build-scripts/linux-install-libxmp.bash",
  "bash build-scripts/linux-download-qpdf-deps.bash",
  "bash build-scripts/linux-download-qpdf.bash $QPDF_VERSION",
  "bash build-scripts/linux-build-wheel-deps.bash"
]
manylinux-x86_64-image = "manylinux2014"
manylinux-i686-image = "manylinux2014"
manylinux-pypy_x86_64-image = "manylinux2014"
manylinux-pypy_i686-image = "manylinux2014"
skip = "*-musllinux_*"

[[tool.cibuildwheel.overrides]]
# As of 2021-10, musllinux image was based on Alpine 3.12
# We need Alpine 3.14 or newer to get the required package versions
select = "*-musllinux*"
before-all = ["apk add py3-lxml py3-pillow python3 py3-setuptools py3-pybind11-dev python3-dev py3-wheel qpdf-dev exempi-dev"]

[tool.cibuildwheel.macos]
before-all = "brew install qpdf"

[tool.cibuildwheel.windows]
# pp3*-win32 fails because there is no wheel for lxml
# pp3*-win_amd64 does not execute because cibuildwheel does not implement it
# or PyPy3 doesn't work on Windows 64-bit, one or the other
# PyPy+Win32 seems like a very low priority combination
skip = "pp3*"

[tool.mypy]

[tool.pytest.ini_options]
minversion = "6.0"
norecursedirs = ["lib", ".pc", ".git", "venv"]
testpaths = ["tests"]
addopts = "-n auto"

[tool.coverage.run]
concurrency = ["multiprocessing"]

[tool.coverage.report]
# Regexes for lines to exclude from consideration
exclude_lines = [
    # Have to re-enable the standard pragma
    "pragma: no cover",

    # Don't complain if tests don't hit defensive assertion code:
    "raise AssertionError",
    "raise NotImplementedError",

    # Don't complain if non-runnable code isn't run:
    "if 0:",
    "if __name__ == .__main__.:",
]

[tool.coverage.html]
directory = "coverage/pycov"

[tool.isort]
profile = "black"
known_first_party = ["pikepdf"]
known_third_party = ["PIL","conftest","hypothesis","lxml","pkg_resources","psutil","pytest","setuptools"]
